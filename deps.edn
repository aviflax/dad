{:deps
 {org.clojure/clojure   {:mvn/version "1.10.2-alpha1"}
 
  anomalies               {:git/url "https://github.com/cognitect-labs/anomalies"
                           :sha "2decbbb3ffd8e919c67d29f39ec6d920575f65c3"
                           :tag "0.1.12"
                           :deps/manifest :deps}

  ; See https://github.com/l3nz/cli-matic/pull/114 for the reason behind this (hopefully temporary)
  ; fork.
  cli-matic             {:git/url "https://github.com/FundingCircle/cli-matic"
                         :sha "28c5148c32e6eb841c452dc9a5f06ee33d5c66c9"}

  clj-commons/clj-yaml  {:mvn/version "0.7.0"}

  medley                {:git/url "https://github.com/weavejester/medley"
                         :sha "6c79c4cce52b276daa3c2b6eaea78f96904bca56"
                         :tag "1.3.0"}
  
  ; For exporting to SQLite • https://github.com/xerial/sqlite-jdbc
  org.xerial/sqlite-jdbc  {:mvn/version "3.31.1"}
  next-jdbc               {:git/url "https://github.com/seancorfield/next-jdbc"
                           :sha "6d362ab611e5473f5b855563a827639519dd4ba5"
                           :tag "v1.0.462"}
  
  ; We use Cheshire for exporting to SQLite — not because we specifically need its features or
  ; speed; we need *some* JSON library so we can convert flat seqs to JSON arrays as strings,
  ; for storage in table cells of type TEXT, because Datasette supports such JSON values in
  ; table cells. We’re using Cheshire specifically for this because it’s already included in the
  ; project via Selmer.
  ; NB: ensure that the version of Cheshire specified here matches that specified by the version of
  ; Selmer we’re using.
  cheshire/cheshire     {:mvn/version "5.8.1"}

  ; For rendering templates • https://github.com/yogthos/Selmer
  selmer                {:mvn/version "1.12.23"}}

 :aliases
 {:dev        {:jvm-opts ["-XX:-OmitStackTraceInFastThrow"
                          "--illegal-access=deny"
                          "-Dclojure.server.repl={:port,0,:accept,clojure.core.server/repl}"]}
  
  :test       {:extra-paths ["test"]
               :extra-deps  {kaocha {:git/url "https://github.com/lambdaisland/kaocha"
                                     :sha "c97184a30a604da92a86d4207ed7e26b67881e5c"
                                     :tag "v1.0.629"}}}
  
  :main       {:main-opts ["-m" "dad.cli"]
               :jvm-opts  ["-Dapple.awt.UIElement=true"
                           "-Djava.awt.headless=true"]}
  
  :uberjar    {:jvm-opts   ["-Dclojure.compiler.direct-linking=true"
                            "-Dclojure.spec.skip-macros=true"]
               :extra-deps {depstar {:git/url "https://github.com/seancorfield/depstar"
                                     :sha "86b64dd0e6e6a3d03020e54537c0cea2b384dbdd"
                                     :tag "v1.0.94"}}}}}
