name: Build & Test

# We want to run the job `test` for every single push for every single branch, whether or not a PR
# is open. The job `build` OTOH takes too long to run it for every single push, so it has an `if`
# condition — see below.
on: [push, pull_request]

jobs:
  test:
    name: Run tests
    # Without this, every push to a branch with an open PR would trigger two executions of this job,
    # one of which would be redundant.
    if: github.event_name == 'push'
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04]
        java: [11, 13, 14]
        suite: [examples] # We don’t have any other suites yet but we hope to, soon!
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        env: { cache-version: v1 }
        with:
          path: |
            .cpcache
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-${{ github.workflow }}-${{ env.cache-version }}-${{ hashFiles('deps.edn') }}
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jre
      - uses: DeLaGuardo/setup-clojure@2.0
        with: { tools-deps: '1.10.1.536' }
      - run: bin/kaocha ${{ matrix.suite }}

  build:
    name: Build executables
    # This job takes way too long (~5 mins as of this writing) to do it on every single push, even
    # when no PR is open. So we’ll run it for pushes to master (which includes merging a PR) and
    # when opening, synchronizing (pushing to), or reopening a PR.
    if: |
      (github.event_name == 'push' && github.ref == 'master')
      ||
      (github.event_name == 'pull_request' && (   github.event.action == 'opened'
                                               || github.event.action == 'synchronize'
                                               || github.event.action == 'reopened'))
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04]
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    steps:
      - uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.1.0.java8'
      - run: gu install native-image
      - uses: DeLaGuardo/setup-clojure@2.0
        with:
          tools-deps: '1.10.1.536'
      - uses: actions/checkout@v2
      - run: bin/build-native-image
      - name: Upload artifact
        if: success() && contains(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: dad-linux-amd64
          path: target/dad
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: success() && contains(matrix.os, 'macos')
        with:
          name: dad-mac-amd64
          path: target/dad
